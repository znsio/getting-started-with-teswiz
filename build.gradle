import java.text.SimpleDateFormat

buildscript {
    ext {
        gradleVersion = '8.10'
        teswizVersion = '1.0.0' // main branch (latest ATD-main)
    }
    repositories {
        mavenLocal()
    }
}

plugins {
    id "java"
    id "idea"
    id "maven-publish"
}

version '0.0.1'

java {
    sourceCompatibility = "17"
    targetCompatibility = "17"
}

repositories {
    mavenLocal()
    maven { url 'https://jitpack.io' }
}

configurations {
    cucumberRuntime {
        extendsFrom testImplementation
    }
}

compileJava { options.encoding = "UTF-8" }

dependencies {
    implementation("com.github.znsio:teswiz:${project.teswizVersion}") {
        transitive = false
    }
}

static def getCurrentDatestamp() {
    Date today = new Date()
    SimpleDateFormat df = new SimpleDateFormat("MM-dd-yyyy")
    return df.format(today)
}

static def getMonth() {
    Date today = new Date()
    SimpleDateFormat df = new SimpleDateFormat("MMM-yyyy")
    return df.format(today)
}

static def getCurrentTimestamp() {
    Date today = new Date()
    SimpleDateFormat df = new SimpleDateFormat("HH-mm-ss")
    return df.format(today)
}

task run(type: JavaExec) {
    doFirst {
        def logDirectory = "./target/" + getMonth() + "/" + getCurrentDatestamp() + "/" + getCurrentTimestamp()
        println "Using LOG_DIR: $logDirectory"
        System.setProperty "LOG_DIR", "$logDirectory"
        environment "APPLITOOLS_API_KEY", System.getenv("teswiz_APPLITOOLS_API_KEY")
        environment "APPLITOOLS_LOG_DIR", "$logDirectory/applitools_logs"

        def configFile = System.getenv("CONFIG")
        if(null == configFile || !file(configFile).exists()) {
            println("CONFIG file not provided, or does not exist")
            assert file(configFile).exists()
        }

//      You can also specify which config file to use based on the value of RUN_IN_CI as shown below
//
//        def configFile = System.getenv("RUN_IN_CI") ? "./configs/calculator_pcloudy_config.properties" : "./configs/jiomeet_local_config.properties"
//        configFile = System.getenv("CONFIG") ? System.getenv("CONFIG") : configFile

        print "configFile: $configFile"
        systemProperties = System.properties as Map<String, ?>
        def runnerArgs = [
                "${configFile}",
                "com/znsio/sample/e2e",
                "src/test/resources"
        ]
        args = runnerArgs

        println("Debug mode: " + System.getProperty('debug', 'false'))
        // attach debugger
        // example: ./gradlew run -Ddebug=true
        if (System.getProperty('debug', 'false') == 'true') {
            println("In debug mode")
            jvmArgs '-Xdebug', '-agentlib:jdwp=transport=dt_socket,server=y,suspend=y,' +
                    'address=*:5005'
        }
    }
    mainClass = "com.znsio.teswiz.runner.Runner"
    classpath = configurations.cucumberRuntime + sourceSets.main.output + sourceSets.test.output
}

wrapper {
    gradleVersion = project.gradleVersion // version from gradle.properties
}
